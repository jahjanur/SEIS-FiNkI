//ex1
//For a given array of random numbers given from standard input, perform a shift of all zeros at the beginning of the sequence. Print the transformed array to standard output.

import java.util.Scanner;

public class ShiftZeros {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        int n = scanner.nextInt();

        int[] array = new int[n];

        for (int i = 0; i < n; i++) {
            array[i] = scanner.nextInt();
        }

        int[] result = new int[n];
        int resultIndex = 0;

        for (int i = 0; i < n; i++) {
            if (array[i] == 0) {
                result[resultIndex] = 0;
                resultIndex++;
            }
        }

        for (int i = 0; i < n; i++) {
            if (array[i] != 0) {
                result[resultIndex] = array[i];
                resultIndex++;
            }
        }

        System.out.println("Transformiranata niza e:");
        for (int i = 0; i < n; i++) {
            System.out.print(result[i] + " ");
        }
    }
}
//ex 2
//For a given word entered from standard input, print it reversed. On input in the first line, the number of words that will be entered is given. In the following lines, the words are entered.
import java.util.Scanner;

public class Main{
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);

        int numberOfWords = scanner.nextInt();
        scanner.nextLine();

        for (int i = 0; i < numberOfWords; i++) {
            String word = scanner.nextLine();
            String reverseWord = reverseWord(word);
            System.out.println(reverseWord);
        }

    }
    private static String reverseWord(String word){
        char[] wordArray = word.toCharArray();
        int left = 0;
        int right = wordArray.length - 1;

        while(left < right){
            char temp = wordArray[left];
            wordArray[left] = wordArray[right];
            wordArray[right] = temp;

            left++;
            right--;
        }
        return new String(wordArray);
    }
}
//ex 3
//For the purpose of a software for keeping track of the revenue generated by employees in the sales department, define a QuarterlySales class that stores the number of sales, the revenue generated by each sale and the number of the quarter.
//Then define another SalesPerson class for which a name(string) and an array of quarterly sales (exactly 4) are stored. For the classes implement the appropriate constructors and methods for the correct execution of the program.
//Implement the following requirements:
// Method `int sumSales(SalesPerson sp)' which will return sum of all the revenues in all quarters generated by the given worker.
// Method `SalesPerson salesChampion(SalesPerson [] arr)' which for the given array of sales employees will return the worker with the most generated revenue (of all quarters)
// Add the `main' method, which will initialize an array of sales persons and quarters according to the input test cases. The number of sales employees is read from input in the first line, and then for each employee the name is read in the first line, and then for each of the quarters for that employee in the first line we have the number of sales, and then in the next line the revenue generated by each of those sales.
// On standard output, print the array of sales employees using the method `void table(SalesPerson [] arr)', which will print a display for the array of sales persons in the following format (three spaces are used for printing space):

import java.util.Scanner;

class QuarterlySales{
    private int[] sales;
    private int quarter;

    public QuarterlySales(int quarter, int[] sales){
        this.quarter = quarter;
        this.sales = sales;
    }

    public int getTotalRevenue(){
        int total = 0;
        for (int i = 0; i < sales.length; i++) {
            int sale = sales[i];
            total += sale;
        }
        return total;
    }

    public int getQuarter(){
        return quarter;
    }
}

class SalesPerson{
    private String name;
    private QuarterlySales[] quarterlySales;

    public SalesPerson(String name, QuarterlySales[] quarterlySales){
        this.name=name;
        this.quarterlySales =quarterlySales;
    }
    public String getName(){
        return name;
    }
    public QuarterlySales[] getQuarterlySales(){
        return quarterlySales;
    }
}
public class Main{
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        int numEmployees = scanner.nextInt();
        scanner.nextLine();

        SalesPerson[] employees = new SalesPerson[numEmployees];

        for (int i = 0; i < numEmployees; i++) {
            String name = scanner.nextLine();
            QuarterlySales[] quarterlySales = new QuarterlySales[4];

            for (int quarter = 0; quarter < 4; quarter++) {
                int numSales = scanner.nextInt();
                int[] sales = new int[numSales];
                for (int j = 0; j < numSales; j++) {
                    sales[j] = scanner.nextInt();
                }
                quarterlySales[quarter] = new QuarterlySales(quarter + 1, sales);
            }
            employees[i] = new SalesPerson(name, quarterlySales);
            scanner.nextLine();
        }

    System.out.println("SP   1   2   3   4   Total");
        for (SalesPerson employee : employees){
            table(employee);
        }

        SalesPerson champion = salesChampion(employees);
        System.out.println("\nSALES CHAMPION: " + champion.getName());
    }
    public static int sumSales(SalesPerson sp){
        int totalRevenue = 0;
        for (QuarterlySales sales : sp.getQuarterlySales()){
            totalRevenue += sales.getTotalRevenue();
        }
        return totalRevenue;
    }
    public static SalesPerson salesChampion(SalesPerson[] arr){
        SalesPerson champion  = arr[0];
        int maxRevenue = sumSales(champion);

        for (SalesPerson employee : arr){
            int revenue =  sumSales(employee);
            if(revenue>maxRevenue){
                champion = employee;
                maxRevenue = revenue;
            }
        }
        return champion;
    }
    public static void table(SalesPerson sp){
        System.out.print(sp.getName() + "   ");
        int totalRevenue = 0;

        for(QuarterlySales quarterlysales : sp.getQuarterlySales()){
            int revenue = quarterlysales.getTotalRevenue();
            totalRevenue += revenue;
            System.out.print(revenue + "   ");
        }
        System.out.println(totalRevenue);
    }
}
